@page "/editor"
@inject NavigationManager NavigationManager;
@using Microsoft.AspNetCore.WebUtilities;
@using EditorOfficeBlazorServer3.Services;
@using EditorOfficeBlazorServer3.Models;
@inject IUsuarioService UsuarioService;

<h1>Editor</h1>

<iframe src="@IframeSrc" style="width:100%; height:100vh;" frameborder="0" allowfullscreen></iframe>

@code {
    private string IframeSrc { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var queryParams = QueryHelpers.ParseQuery(uri.Query);

        bool isBlankDocument = true;
        string documentTitle = "blank.docx"; // Mantén el título como estaba

        if (queryParams.TryGetValue("plantilla", out var plantilla) && !string.IsNullOrWhiteSpace(plantilla))
        {
            isBlankDocument = false;
            documentTitle = plantilla;
        }

        // Suponiendo que obtienes los datos del primer usuario como ejemplo
        var primerUsuario = await UsuarioService.GetUsuariosAsync();
        var usuario = primerUsuario.FirstOrDefault();

        IframeSrc = BuildIframeSrc(isBlankDocument, documentTitle, usuario);
    }

    private string BuildIframeSrc(bool isBlankDocument, string documentTitle, Usuario usuario = null)
    {
        string baseUrl = "onlyoffice.html";
        string encodedTitle = Uri.EscapeDataString(documentTitle);

        // Añade parámetros adicionales si se ha proporcionado un usuario
        string usuarioParams = usuario != null
        ?
        $"&nombre={Uri.EscapeDataString(usuario.Nombre)}&cedula={Uri.EscapeDataString(usuario.Cedula)}&direccion={Uri.EscapeDataString(usuario.Direccion)}"
        : "";

        return $"{baseUrl}?isBlank={isBlankDocument}&title={encodedTitle}{usuarioParams}";
    }
}
